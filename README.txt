This distribution contains an implementation of M2M in RIA that does not 
require join tables in the entity model or in RIA. It provides full CRUD 
operations on M2M relations. The idea is to let RIA operate on our own 
provided join types, rather than on join types generated by EF. These 
join tables only serve communication between client and server, such 
that M2M relations can be send and received to a remote client. At the 
client side a "view" on the M2M relations shows only B's to A, and A's 
to B. You therefore no longer need join table objects to access M2M 
relations. Your entity model doesn't need any change for this.

Installation
============
The distribution consists of a collection of T4 templates, some C# 
files, and a template XML file for defining M2M relations. The files are 
divided in three directories depending on where they are needed: 

1) server:
 - m2mdatatypes.tt: T4 template that generates join types and extends EF 
   types with join type collections. 
 - m2mdomainservice.tt: T4 script that generates domain service 
   operations for these join types. 
 - M2MEntityCollection.cs: Class that implements a many-2-many "view" on 
   EF M2M associations. 
 - M2MTools.cs: some helper functions.
2) client:
 - m2mdomaincontext.tt: T4 template that generates some extensions to 
   the domain context and extends the RIA entity types with M2M 
   collections. 
 - M2MEntityCollection.cs: Class that implements a single-type "view" on 
   a RIA M2M relation (i.e., it does the opposite of 
   server/M2MEntityCollection.cs).
3) shared:
 - m2mgenerator.ttinclude: T4 template that contains functions which are 
   shared between the different T4 templates.
 - M2MGenerator.xml: The XML file containing the definition of M2M 
   relations and generator configuration. 

The files "m2mdatatypes.tt" and "M2MEntityCollection.cs" need to exist 
in the assembly containing your EF model. The files 
"m2mdomainservice.tt" and "M2MTools" needs to exist in the assembly 
containing your domain service definition. The files 
"m2mdomaincontext.tt" and "M2MEntityCollection.cs" need to exist in the 
assembly that contains the domain context. In these three T4 files you 
have to edit two paths: 1) the path to the m2mrelations.ttinclude file; 
and 2) the path to the "M2MRelations.xml". 

Note. Your domain context must be declared as a partial class (the RIA 
code generator does not do that for you). 

M2MDemo
======= 
The distribution also contains a demo, which is contained in the 
directory M2MDemo This demo requires VS2010, Silverlight 4.0, and RIA 
1.0. The demo demonstrates M2M relations for a simple data model. It 
contains an example of an M2MGenerator XML configuration file, as well 
as the corresponding generated files. If you run the application a small 
database is created, named "M2M". The application allows you to add 
elements to an M2M realtion between Patient and Doctor. 

Contact
=======
For more information contact Merijn de Jonge (Merijn dot de dot Jonge at 
philips dot com).
